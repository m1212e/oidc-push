services:
  postgres:
    image: postgres
    container_name: postgres-dev-project
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - project-dev:/var/lib/postgresql/data

  # When using the mock server this can be helpful to paste into the form to create a valid token with claims etc.
  # {
  #  "email": "my@mail.com",
  #  "family_name": "Munify",
  #  "given_name": "project Jr.",
  #  "preferred_username": "projectuser_123",
  #  "locale": "de",
  #  "urn:zitadel:iam:org:project:275671427955294244:roles": {"admin": {}}
  # }
  mockoidc:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.10
    ports:
      - 8080:8080
    environment:
      JSON_CONFIG: >
        {
          "interactiveLogin": true,
          "httpServer": "NettyWrapper",
          "tokenCallbacks": [
              {
                "issuerId": "issuer1",
                "tokenExpiry": 120,
                "requestMappings": [
                  {
                    "requestParam": "code",
                    "match": "code1",
                    "claims": {
                      "sub": "subByCode",
                      "aud": [
                          "audByCode"
                      ]
                    }
                  }
                ]
              }
          ],
          "loginPagePath": "/static/mock-oidc-landingpage.html"
        }
    volumes:
      - ./mock-oidc-landingpage.html:/static/mock-oidc-landingpage.html

  ntfy:
    image: binwiederhier/ntfy
    command:
      - serve
    volumes:
      - ./ntfy:/etc/ntfy
    ports:
      - 80:80
    restart: unless-stopped

volumes:
  project-dev:
